--SEQUENCE USED TO AUTO INCREMENT
CREATE SEQUENCE BAND_SEQ
  START WITH 1
  INCREMENT BY 1;
  
--TRIGGER THAT WILL INCREMENT THE SEQUENCE
--AND ALTER THE PRIMARY KEY VALUE OF AN INSERT
CREATE OR REPLACE TRIGGER BAND_B_INSERT
BEFORE INSERT
ON BAND
FOR EACH ROW
BEGIN
  /* INCREASE THE SEQUENCE */
  --IF YOU DON'T WANT USERS TO INSERT ANY VALUE TO THE PK
  --COLUMN, REMOVE THE IF STATEMENT.
  IF :NEW.B_ID IS NULL THEN
    SELECT BAND_SEQ.NEXTVAL INTO :NEW.B_ID FROM DUAL;
  END IF;

  SELECT GET_BAND_HASH(:NEW.B_NAME, :NEW.B_ACTIVE) INTO :NEW.BAND_HASH FROM DUAL;
END;
/

--HASHING FUNCTION (Uses MD5)
CREATE OR REPLACE FUNCTION GET_BAND_HASH (BAND_NAME VARCHAR2, ACTIVE VARCHAR2) RETURN VARCHAR2
IS
EXTRA VARCHAR2(10) := 'SALT';
BEGIN
  RETURN TO_CHAR(DBMS_OBFUSCATION_TOOLKIT.MD5(
  INPUT => UTL_I18N.STRING_TO_RAW(DATA => BAND_NAME || ACTIVE || EXTRA)));
END;
/

--USED FOR CALLABLE STATEMENT IN JDBC
CREATE OR REPLACE PROCEDURE INSERT_BAND (
NAME VARCHAR2, WEBSITE VARCHAR2, ACTIVE VARCHAR2, START_DATE DATE, GENRE_ID  NUMBER)
AS
BEGIN
  INSERT INTO BAND VALUES(NULL, NAME, WEBSITE, ACTIVE, START_DATE, GENRE_ID, NULL);
  COMMIT;
END;
/